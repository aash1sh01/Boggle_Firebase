{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\boggle\\\\src\\\\ToggleGameState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { GAME_STATE } from './GameState.js';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport './ToggleGameState.css';\nimport firebase from './firebase';\nimport { TextField } from '@material-ui/core';\nimport { collection, addDoc, query, getDocs, orderBy, limit } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = firebase.firestore();\n\nfunction ToggleGameState(_ref) {\n  _s();\n\n  let {\n    gameState,\n    setGameState,\n    setSize,\n    setTotalTime,\n    numFound,\n    theGrid,\n    setGrid,\n    user\n  } = _ref;\n  const [buttonText, setButtonText] = useState(\"Start a new game!\");\n  const [startTime, setStartTime] = useState(0);\n  const [boardSize, setBoardSize] = useState(3);\n  const [leaderBoard, setLeaderBoard] = useState([]);\n  const [input, setInput] = useState(user.displayName);\n  const [deltaTime, setDeltaTime] = useState(0);\n  let d = 0;\n\n  function updateGameState(endTime) {\n    if (gameState === GAME_STATE.SHOW_LEADERBOARD || gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) {\n      setStartTime(Date.now());\n      setGameState(GAME_STATE.IN_PROGRESS);\n      setButtonText(\"End game\");\n    } else if (gameState === GAME_STATE.IN_PROGRESS) {\n      d = (endTime - startTime) / 1000.0;\n      setDeltaTime(d);\n      setTotalTime(d);\n      setGameState(GAME_STATE.ADD_LEADERBOARD);\n    }\n  }\n\n  async function showLeaderBoard() {\n    setGameState(GAME_STATE.SHOW_LEADERBOARD);\n    setButtonText(\"Play Existing Game!\");\n\n    try {\n      const q = query(collection(db, \"Leaderboard\"), orderBy(\"boardSize\"), orderBy(\"solveTime\", \"asc\"), limit(10));\n      const querySnapshot = await getDocs(q);\n      const games = [];\n      querySnapshot.forEach(doc => {\n        console.log(doc.id, \" => \", doc.data());\n        games.push(doc.data());\n      });\n      setLeaderBoard([...games]);\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n\n  async function StoreGameResults() {\n    try {\n      await addDoc(collection(db, \"Leaderboard\"), {\n        boardSize: boardSize,\n        solveTime: deltaTime,\n        numFound: numFound,\n        playerName: input,\n        theBoard: theGrid\n      });\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n\n  function evaluateInput() {\n    setGameState(GAME_STATE.ENDED);\n    setButtonText(\"Start a new game!\");\n    StoreGameResults();\n  }\n\n  function keyPress(e) {\n    if (e.key === 'Enter') {\n      e.target.value = \"\";\n      evaluateInput();\n    }\n  }\n\n  const handleGridChange = event => {\n    setSize(-11111);\n    setGrid(JSON.parse(event.target.value));\n    console.log(\"theGrid = \", event.target.value);\n  };\n\n  const handleSizeMenuChange = event => {\n    setBoardSize(event.target.value);\n    setSize(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [(gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Toggle-game-state\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => showLeaderBoard(),\n        children: \"Play Existing Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Toggle-game-state\",\n      children: [gameState === GAME_STATE.ADD_LEADERBOARD && /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Enter Your Name\",\n        variant: \"outlined\",\n        defaultValue: user.displayName,\n        onKeyPress: e => keyPress(e),\n        onChange: event => setInput(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this), gameState !== GAME_STATE.ADD_LEADERBOARD && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => updateGameState(Date.now()),\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, this), (gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Input-select-size\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"sizelabel\",\n            id: \"sizemenu\",\n            onChange: handleSizeMenuChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 3,\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 4,\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 5,\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 6,\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 134,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 7,\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 135,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 8,\n              children: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 9,\n              children: \"9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 10,\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Set Grid Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), gameState === GAME_STATE.SHOW_LEADERBOARD && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Input-select-size\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"leaderboardlabel\",\n            id: \"leaderboardmenu\",\n            onChange: handleGridChange,\n            style: {\n              width: \"75px\",\n              margin: \"5px\"\n            },\n            children: leaderBoard.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.theBoard,\n                children: [\"Size: \", item.boardSize, \" Words Found: \", item.numFound, \" Name: \", item.playerName]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 21\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Select Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 147,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleGameState, \"De6FgriH9ZEw0rhxDU5Hy5T1sKU=\");\n\n_c = ToggleGameState;\nexport default ToggleGameState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleGameState\");","map":{"version":3,"sources":["C:/Users/Lenovo/boggle/src/ToggleGameState.js"],"names":["React","useState","Button","GAME_STATE","MenuItem","FormHelperText","Select","FormControl","firebase","TextField","collection","addDoc","query","getDocs","orderBy","limit","db","firestore","ToggleGameState","gameState","setGameState","setSize","setTotalTime","numFound","theGrid","setGrid","user","buttonText","setButtonText","startTime","setStartTime","boardSize","setBoardSize","leaderBoard","setLeaderBoard","input","setInput","displayName","deltaTime","setDeltaTime","d","updateGameState","endTime","SHOW_LEADERBOARD","BEFORE","ENDED","Date","now","IN_PROGRESS","ADD_LEADERBOARD","showLeaderBoard","q","querySnapshot","games","forEach","doc","console","log","id","data","push","e","error","StoreGameResults","solveTime","playerName","theBoard","evaluateInput","keyPress","key","target","value","handleGridChange","event","JSON","parse","handleSizeMenuChange","width","margin","map","item","idx"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {GAME_STATE} from './GameState.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport './ToggleGameState.css';\r\nimport firebase from './firebase'\r\nimport { TextField } from '@material-ui/core';\r\nimport { collection, addDoc, query, getDocs, orderBy, limit } from \"firebase/firestore\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nfunction ToggleGameState({gameState, setGameState, setSize, setTotalTime, numFound, theGrid, setGrid, user}) {\r\n\r\n  const [buttonText, setButtonText] = useState(\"Start a new game!\");\r\n  const [startTime, setStartTime] = useState(0);\r\n  const [boardSize, setBoardSize] = useState(3);\r\n  const [leaderBoard, setLeaderBoard] = useState([]);\r\n  const [input, setInput] = useState(user.displayName);\r\n  const [deltaTime, setDeltaTime] = useState(0);\r\n  \r\n  let d = 0;\r\n  \r\n  function updateGameState(endTime) {\r\n    \r\n    if (gameState === GAME_STATE.SHOW_LEADERBOARD || gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) {\r\n      setStartTime(Date.now());\r\n      setGameState(GAME_STATE.IN_PROGRESS);\r\n      setButtonText(\"End game\");\r\n    } else if (gameState === GAME_STATE.IN_PROGRESS) {\r\n      d = (endTime - startTime)/ 1000.0;\r\n      setDeltaTime(d);\r\n      setTotalTime(d); \r\n      setGameState(GAME_STATE.ADD_LEADERBOARD);\r\n    }\r\n  }\r\n  \r\n  async function showLeaderBoard(){\r\n   \r\n      setGameState(GAME_STATE.SHOW_LEADERBOARD);\r\n      setButtonText(\"Play Existing Game!\");\r\n \r\n    try {\r\n       const q = query(collection(db, \"Leaderboard\"), orderBy(\"boardSize\"), orderBy(\"solveTime\", \"asc\"), limit(10));\r\n       const querySnapshot = await getDocs(q);\r\n       const games = [];\r\n       querySnapshot.forEach((doc) => {\r\n              \r\n       console.log(doc.id, \" => \", doc.data());\r\n       games.push(doc.data());\r\n      });\r\n       setLeaderBoard([...games]);\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n    }\r\n    \r\n  }\r\n\r\n  async function StoreGameResults() {\r\n\r\n    try {\r\n      await addDoc(collection(db, \"Leaderboard\"), {\r\n      boardSize: boardSize,\r\n      solveTime: deltaTime,\r\n      numFound: numFound,    \r\n      playerName: input,\r\n      theBoard: theGrid\r\n      });  \r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n    }\r\n  }\r\n  \r\n  function evaluateInput() {\r\n    setGameState(GAME_STATE.ENDED);\r\n    setButtonText(\"Start a new game!\");\r\n    StoreGameResults();\r\n  }\r\n\r\n  function keyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      e.target.value = \"\";\r\n      evaluateInput();\r\n    }\r\n  }\r\n  \r\n  const handleGridChange = (event) => {\r\n  \r\n    setSize(-11111);\r\n    setGrid(JSON.parse(event.target.value));\r\n    console.log(\"theGrid = \", event.target.value); \r\n  };\r\n  \r\n  const handleSizeMenuChange = (event) => {\r\n    setBoardSize(event.target.value);\r\n    setSize(event.target.value);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n      { (gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) &&\r\n        <div className=\"Toggle-game-state\">\r\n          <Button variant=\"outlined\" onClick={() => showLeaderBoard()} >\r\n          Play Existing Game\r\n          </Button>\r\n        </div>\r\n      }\r\n\r\n      <div className=\"Toggle-game-state\">\r\n      \r\n      { gameState === GAME_STATE.ADD_LEADERBOARD &&\r\n        <TextField id=\"outlined-basic\" label=\"Enter Your Name\" variant=\"outlined\" defaultValue={user.displayName} onKeyPress={(e) => keyPress(e)} onChange={(event) => setInput(event.target.value)} />\r\n      }\r\n      \r\n      { gameState !== GAME_STATE.ADD_LEADERBOARD &&\r\n        <Button variant=\"outlined\" onClick={() => updateGameState(Date.now())} >\r\n          {buttonText}\r\n        </Button>\r\n      }\r\n\r\n      { (gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED)  &&\r\n        <div className=\"Input-select-size\">\r\n          <FormControl>\r\n            <Select\r\n              labelId=\"sizelabel\"\r\n              id=\"sizemenu\"\r\n              onChange={handleSizeMenuChange}\r\n            >\r\n            <MenuItem value={3}>3</MenuItem>\r\n            <MenuItem value={4}>4</MenuItem>\r\n            <MenuItem value={5}>5</MenuItem>\r\n            <MenuItem value={6}>6</MenuItem>\r\n            <MenuItem value={7}>7</MenuItem>\r\n            <MenuItem value={8}>8</MenuItem>\r\n            <MenuItem value={9}>9</MenuItem>\r\n            <MenuItem value={10}>10</MenuItem>\r\n          </Select>\r\n         <FormHelperText>Set Grid Size</FormHelperText>\r\n        </FormControl>\r\n       </div>\r\n      }\r\n\r\n      {(gameState === GAME_STATE.SHOW_LEADERBOARD) &&\r\n        <div className=\"Input-select-size\">\r\n          <FormControl>\r\n            <Select\r\n              labelId=\"leaderboardlabel\"\r\n              id=\"leaderboardmenu\"\r\n              onChange={handleGridChange}\r\n              style={{width: \"75px\", margin: \"5px\"}}>\r\n              {leaderBoard.map((item, idx) => {\r\n                return (\r\n                    <MenuItem key={idx} value={item.theBoard}>\r\n                      Size: {item.boardSize} Words Found: {item.numFound} Name: {item.playerName}\r\n                    </MenuItem>\r\n                );\r\n              })}\r\n            </Select>\r\n            <FormHelperText>Select Game</FormHelperText>\r\n          </FormControl>\r\n        </div>\r\n      } \r\n    </div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default ToggleGameState;"]},"metadata":{},"sourceType":"module"}