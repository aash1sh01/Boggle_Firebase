{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Lenovo\\\\boggle\\\\src\\\\ToggleGameState.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Button from \"@material-ui/core/Button\";\nimport { GAME_STATE } from './GameState.js';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Select from '@material-ui/core/Select';\nimport FormControl from '@material-ui/core/FormControl';\nimport './ToggleGameState.css';\nimport firebase from './firebase';\nimport { TextField } from '@material-ui/core';\nimport { collection, addDoc, query, getDocs, orderBy, limit } from \"firebase/firestore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst db = firebase.firestore();\n\nfunction ToggleGameState(_ref) {\n  _s();\n\n  let {\n    gameState,\n    setGameState,\n    setSize,\n    setTotalTime,\n    numFound,\n    theGrid,\n    setGrid\n  } = _ref;\n  const [buttonText, setButtonText] = useState(\"Start a new game!\");\n  const [startTime, setStartTime] = useState(0);\n  const [boardSize, setBoardSize] = useState(3);\n  const [leaderBoard, setLeaderBoard] = useState([]);\n  const [input, setInput] = useState(\"\");\n  const [deltaTime, setDeltaTime] = useState(0);\n  let d = 0;\n\n  function updateGameState(endTime) {\n    if (gameState === GAME_STATE.SHOW_LEADERBOARD || gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) {\n      setStartTime(Date.now());\n      setGameState(GAME_STATE.IN_PROGRESS);\n      setButtonText(\"End game\");\n    } else if (gameState === GAME_STATE.IN_PROGRESS) {\n      d = (endTime - startTime) / 1000.0;\n      setDeltaTime(d);\n      setTotalTime(d);\n      setGameState(GAME_STATE.ADD_LEADERBOARD);\n    } else {\n      setGameState(GAME_STATE.ENDED);\n      setButtonText(\"Start a new game!\");\n      StoreGameResults();\n    }\n  }\n  /*Query Firestore to get all games ordered by boardSize, Time Solved */\n\n\n  async function showLeaderBoard() {\n    setGameState(GAME_STATE.SHOW_LEADERBOARD);\n    setButtonText(\"Play Existing Game!\"); // build query and bind results to menu list\n\n    try {\n      const q = query(collection(db, \"Leaderboard\"), orderBy(\"boardSize\"), orderBy(\"solveTime\", \"asc\"), limit(10));\n      const querySnapshot = await getDocs(q);\n      querySnapshot.forEach(doc => {\n        console.log(doc.id, \" => \", doc.data());\n        leaderBoard.push(doc.data());\n        setLeaderBoard([...leaderBoard, leaderBoard]); //doc.boardSize, doc.solveTime, doc.playerName\n\n        console.log(\"Entry = \", leaderBoard);\n      });\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n  /* Store the Game in Firestore */\n\n\n  async function StoreGameResults() {\n    try {\n      /*const docRef =*/\n      await addDoc(collection(db, \"Leaderboard\"), {\n        boardSize: boardSize,\n        solveTime: deltaTime,\n        numFound: numFound,\n        playerName: input,\n        theBoard: theGrid\n      });\n    } catch (e) {\n      console.error(\"Error adding document: \", e);\n    }\n  }\n\n  function evaluateInput() {\n    setGameState(GAME_STATE.ENDED);\n    setButtonText(\"Start a new game!\");\n    StoreGameResults();\n  }\n\n  function keyPress(e) {\n    if (e.key === 'Enter') {\n      e.target.value = \"\";\n      evaluateInput();\n    }\n  }\n\n  const handleGridChange = event => {\n    setSize(-11111);\n    setGrid(JSON.parse(event.target.value));\n    console.log(\"theGrid = \", event.target.value);\n  };\n\n  const handleSizeMenuChange = event => {\n    setBoardSize(event.target.value);\n    setSize(event.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [(gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Toggle-game-state2\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => showLeaderBoard(),\n        children: \"Play Existing Game\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Toggle-game-state\",\n      children: [gameState === GAME_STATE.ADD_LEADERBOARD && /*#__PURE__*/_jsxDEV(TextField, {\n        id: \"outlined-basic\",\n        label: \"Enter Your Name\",\n        variant: \"outlined\",\n        onKeyPress: e => keyPress(e),\n        onChange: event => setInput(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this), gameState !== GAME_STATE.ADD_LEADERBOARD && /*#__PURE__*/_jsxDEV(Button, {\n        variant: \"outlined\",\n        onClick: () => updateGameState(Date.now()),\n        children: buttonText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 10\n      }, this), (gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Input-select-size\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"sizelabel\",\n            id: \"sizemenu\",\n            value: \"\",\n            onChange: handleSizeMenuChange,\n            children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 3,\n              children: \"3\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 4,\n              children: \"4\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 5,\n              children: \"5\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 6,\n              children: \"6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 7,\n              children: \"7\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 8,\n              children: \"8\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 9,\n              children: \"9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 11\n            }, this), /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: 10,\n              children: \"10\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 11\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 9\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Set Grid Size\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 9\n      }, this), gameState === GAME_STATE.SHOW_LEADERBOARD && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"Input-select-size\",\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          children: [/*#__PURE__*/_jsxDEV(Select, {\n            labelId: \"leaderboardlabel\",\n            id: \"leaderboardmenu\",\n            value: \"\",\n            onChange: handleGridChange,\n            children: leaderBoard.map((item, idx) => {\n              return /*#__PURE__*/_jsxDEV(MenuItem, {\n                value: item.theBoard,\n                children: [\"Size: \", item.boardSize, \" Words Found: \", item.numFound, \" Name: \", item.playerName]\n              }, idx, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 13\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 8\n          }, this), /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: \"Select Game\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 180,\n            columnNumber: 8\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ToggleGameState, \"wCga/0C7wTPlpFUF8/w2IXiZM0A=\");\n\n_c = ToggleGameState;\nexport default ToggleGameState;\n\nvar _c;\n\n$RefreshReg$(_c, \"ToggleGameState\");","map":{"version":3,"sources":["C:/Users/Lenovo/boggle/src/ToggleGameState.js"],"names":["React","useState","Button","GAME_STATE","MenuItem","FormHelperText","Select","FormControl","firebase","TextField","collection","addDoc","query","getDocs","orderBy","limit","db","firestore","ToggleGameState","gameState","setGameState","setSize","setTotalTime","numFound","theGrid","setGrid","buttonText","setButtonText","startTime","setStartTime","boardSize","setBoardSize","leaderBoard","setLeaderBoard","input","setInput","deltaTime","setDeltaTime","d","updateGameState","endTime","SHOW_LEADERBOARD","BEFORE","ENDED","Date","now","IN_PROGRESS","ADD_LEADERBOARD","StoreGameResults","showLeaderBoard","q","querySnapshot","forEach","doc","console","log","id","data","push","e","error","solveTime","playerName","theBoard","evaluateInput","keyPress","key","target","value","handleGridChange","event","JSON","parse","handleSizeMenuChange","map","item","idx"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\nimport Button from \"@material-ui/core/Button\";\r\nimport {GAME_STATE} from './GameState.js';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormHelperText from '@material-ui/core/FormHelperText';\r\nimport Select from '@material-ui/core/Select';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport './ToggleGameState.css';\r\nimport firebase from './firebase'\r\nimport { TextField } from '@material-ui/core';\r\nimport { collection, addDoc, query, getDocs, orderBy, limit } from \"firebase/firestore\";\r\n\r\nconst db = firebase.firestore();\r\n\r\nfunction ToggleGameState({gameState, setGameState, setSize, setTotalTime, numFound, theGrid, setGrid}) {\r\n\r\n  const [buttonText, setButtonText] = useState(\"Start a new game!\");\r\n  const [startTime, setStartTime] = useState(0);\r\n  const [boardSize, setBoardSize] = useState(3);\r\n  const [leaderBoard, setLeaderBoard] = useState([]);\r\n  const [input, setInput] = useState(\"\");\r\n  const [deltaTime, setDeltaTime] = useState(0);\r\n  \r\n  let d = 0;\r\n  \r\n  function updateGameState(endTime) {\r\n    \r\n    if (gameState === GAME_STATE.SHOW_LEADERBOARD || gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) {\r\n      setStartTime(Date.now());\r\n      setGameState(GAME_STATE.IN_PROGRESS);\r\n      setButtonText(\"End game\");\r\n    } else if (gameState === GAME_STATE.IN_PROGRESS) {\r\n      d = (endTime - startTime)/ 1000.0;\r\n      setDeltaTime(d);\r\n      setTotalTime(d); \r\n      \r\n      setGameState(GAME_STATE.ADD_LEADERBOARD);\r\n    \r\n      \r\n  \r\n    }\r\n    else{\r\n      setGameState(GAME_STATE.ENDED);\r\n      setButtonText(\"Start a new game!\");\r\n      StoreGameResults();\r\n    }\r\n  }\r\n  \r\n  /*Query Firestore to get all games ordered by boardSize, Time Solved */\r\n  async function showLeaderBoard(){\r\n   \r\n      setGameState(GAME_STATE.SHOW_LEADERBOARD);\r\n      setButtonText(\"Play Existing Game!\");\r\n    \r\n      // build query and bind results to menu list\r\n \r\n    try {\r\n       const q = query(collection(db, \"Leaderboard\"), orderBy(\"boardSize\"), orderBy(\"solveTime\", \"asc\"), limit(10));\r\n\r\n       const querySnapshot = await getDocs(q);\r\n       querySnapshot.forEach((doc) => {\r\n              \r\n       console.log(doc.id, \" => \", doc.data());\r\n        \r\n       leaderBoard.push(doc.data());                \r\n       setLeaderBoard([...leaderBoard, leaderBoard]);  //doc.boardSize, doc.solveTime, doc.playerName\r\n       console.log(\"Entry = \", leaderBoard);\r\n      });\r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n    }\r\n    \r\n  }\r\n\r\n  /* Store the Game in Firestore */\r\n  async function StoreGameResults() {\r\n\r\n    try {\r\n      /*const docRef =*/ await addDoc(collection(db, \"Leaderboard\"), {\r\n      boardSize: boardSize,\r\n      solveTime: deltaTime,\r\n      numFound: numFound,    \r\n      playerName: input,\r\n      theBoard: theGrid\r\n      });  \r\n    } catch (e) {\r\n      console.error(\"Error adding document: \", e);\r\n    }\r\n  }\r\n  \r\n  function evaluateInput() {\r\n    setGameState(GAME_STATE.ENDED);\r\n    setButtonText(\"Start a new game!\");\r\n    StoreGameResults();\r\n  }\r\n\r\n  function keyPress(e) {\r\n    if (e.key === 'Enter') {\r\n      e.target.value = \"\";\r\n      evaluateInput();\r\n    }\r\n  }\r\n  \r\n  const handleGridChange = (event) => {\r\n  \r\n    setSize(-11111);\r\n    setGrid(JSON.parse(event.target.value));\r\n    console.log(\"theGrid = \", event.target.value); \r\n  };\r\n  \r\n  const handleSizeMenuChange = (event) => {\r\n    setBoardSize(event.target.value);\r\n    setSize(event.target.value);\r\n  };\r\n  \r\n  return (\r\n    <div>\r\n    { (gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED) &&\r\n    <div className=\"Toggle-game-state2\">\r\n          <Button variant=\"outlined\" onClick={() => showLeaderBoard()} >\r\n          Play Existing Game\r\n          </Button>\r\n    </div>\r\n    }\r\n    <div className=\"Toggle-game-state\">\r\n      \r\n      { gameState === GAME_STATE.ADD_LEADERBOARD &&\r\n        \r\n        <TextField id=\"outlined-basic\" label=\"Enter Your Name\" variant=\"outlined\" onKeyPress={(e) => keyPress(e)} onChange={(event) => setInput(event.target.value)} />\r\n      }\r\n      \r\n      { gameState !== GAME_STATE.ADD_LEADERBOARD &&\r\n         <Button variant=\"outlined\" onClick={() => updateGameState(Date.now())} >\r\n        {buttonText}\r\n        </Button>\r\n      }\r\n\r\n      { (gameState === GAME_STATE.BEFORE || gameState === GAME_STATE.ENDED)  &&\r\n        <div className=\"Input-select-size\">\r\n        <FormControl>\r\n       \r\n        <Select\r\n          labelId=\"sizelabel\"\r\n          id=\"sizemenu\"\r\n          value=''\r\n          onChange={handleSizeMenuChange}\r\n        >\r\n          <MenuItem value={3}>3</MenuItem>\r\n          <MenuItem value={4}>4</MenuItem>\r\n          <MenuItem value={5}>5</MenuItem>\r\n          <MenuItem value={6}>6</MenuItem>\r\n          <MenuItem value={7}>7</MenuItem>\r\n          <MenuItem value={8}>8</MenuItem>\r\n          <MenuItem value={9}>9</MenuItem>\r\n          <MenuItem value={10}>10</MenuItem>\r\n        </Select>\r\n         <FormHelperText>Set Grid Size</FormHelperText>\r\n        </FormControl>\r\n       </div>\r\n      }\r\n\r\n      {(gameState === GAME_STATE.SHOW_LEADERBOARD) &&\r\n        <div className=\"Input-select-size\">\r\n        <FormControl>\r\n          \r\n       <Select\r\n         labelId=\"leaderboardlabel\"\r\n         id=\"leaderboardmenu\"\r\n         value=''\r\n         onChange={handleGridChange}\r\n       >\r\n       {leaderBoard.map((item, idx) => {\r\n        return (\r\n            <MenuItem key={idx} value={item.theBoard}>\r\n              Size: {item.boardSize} Words Found: {item.numFound} Name: {item.playerName}\r\n            </MenuItem>\r\n        );\r\n       })}\r\n       </Select>\r\n       <FormHelperText>Select Game</FormHelperText>\r\n        </FormControl>\r\n        </div>\r\n      }\r\n      \r\n    </div>\r\n</div>\r\n  );\r\n}\r\n\r\nexport default ToggleGameState;"]},"metadata":{},"sourceType":"module"}